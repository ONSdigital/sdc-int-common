<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>ons.sdc.int.common</groupId>
  <artifactId>common</artifactId>
  <!-- version auto updated by CloudBuild mvn release -->
  <version>1.0.81-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>SDC : Integrations Common</name>
  <description>Parent project with common modules for SDC Integrations application projects</description>

  <organization>
    <name>UK Office For National Statistics</name>
    <url>http://ons.gov.uk</url>
  </organization>

  <licenses>
    <license>
      <name>MIT License</name>
      <url>http://www.opensource.org/licenses/mit-license.php</url>
    </license>
  </licenses>

  <modules>
    <module>framework</module>
    <module>test-framework</module>
    <module>product-reference</module>
    <module>eq-launcher</module>
    <module>event-publisher</module>
    <module>case-api-client</module>
    <module>notify-api-client</module>
    <module>rate-limiter-client</module>
    <module>util-framework</module>

    <!-- if adding or removing a module keep coverage pom up to date! -->
    <module>coverage</module>
  </modules>

  <scm>
    <connection>scm:git:ssh://github.com/ONSdigital/sdc-int-common</connection>
    <developerConnection>scm:git:ssh://github.com/ONSdigital/sdc-int-common</developerConnection>
    <tag>common-1.0.9</tag>
  </scm>


  <properties>
    <springboot.version>2.5.3</springboot.version>
    <java.version>17</java.version>
    <junit.version>5.7.2</junit.version>
    <jacoco.version>0.8.7</jacoco.version>
    <skip.integration.tests>true</skip.integration.tests>
    <orika.version>1.5.2</orika.version>
    <surefire.version>3.0.0-M5</surefire.version>
    <googlecloud.version>8.1.0</googlecloud.version>
    <spring-cloud-gcp.version>2.0.3</spring-cloud-gcp.version>
    <guava.version>29.0-jre</guava.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <project.scm.id>ONS</project.scm.id>
    <testcontainers.version>1.16.2</testcontainers.version>
    <lombok.version>1.18.22</lombok.version>
  </properties>

  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>com.google.cloud</groupId>
        <artifactId>libraries-bom</artifactId>
        <version>${googlecloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${springboot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>com.google.cloud</groupId>
        <artifactId>spring-cloud-gcp-dependencies</artifactId>
        <version>${spring-cloud-gcp.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-starter-circuitbreaker-resilience4j</artifactId>
        <version>2.0.2</version>
      </dependency>

      <!-- need separate jaxb deps after java11 removed them -->
      <dependency>
        <groupId>javax.xml.bind</groupId>
        <artifactId>jaxb-api</artifactId>
        <version>2.3.0</version>
      </dependency>
      <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-core</artifactId>
        <version>2.3.0</version>
      </dependency>
      <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-impl</artifactId>
        <version>2.3.0</version>
      </dependency>

      <dependency>
        <groupId>ma.glasnost.orika</groupId>
        <artifactId>orika-core</artifactId>
        <version>${orika.version}</version>
      </dependency>

      <dependency>
        <groupId>ma.glasnost.orika</groupId>
        <artifactId>orika-eclipse-tools</artifactId>
        <version>${orika.version}</version>
      </dependency>

      <dependency>
        <groupId>net.logstash.logback</groupId>
        <artifactId>logstash-logback-encoder</artifactId>
        <version>6.6</version>
      </dependency>

      <dependency>
        <groupId>org.redisson</groupId>
        <artifactId>redisson</artifactId>
        <version>3.2.0</version>
      </dependency>

      <dependency>
        <groupId>io.springfox</groupId>
        <artifactId>springfox-swagger2</artifactId>
        <version>2.7.0</version>
      </dependency>

      <dependency>
        <groupId>io.springfox</groupId>
        <artifactId>springfox-swagger-ui</artifactId>
        <version>2.7.0</version>
      </dependency>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>3.8.1</version>
      </dependency>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-collections4</artifactId>
        <version>4.2</version>
      </dependency>

      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version> <!--$NO-MVN-MAN-VER$-->
      </dependency>

      <dependency>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jacoco</groupId>
        <artifactId>org.jacoco.core</artifactId>
        <version>${jacoco.version}</version>
      </dependency>

      <dependency>
        <groupId>net.codesup.util</groupId>
        <artifactId>jaxb2-rich-contract-plugin</artifactId>
        <version>2.0.0</version>
      </dependency>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-csv</artifactId>
        <version>1.4</version>
      </dependency>

      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${junit.version}</version>
      </dependency>

      <dependency>
        <groupId>com.nimbusds</groupId>
        <artifactId>nimbus-jose-jwt</artifactId>
        <!-- WARNING changing the version of Nimbus may lead to loss of a deprecated Algorithm that may break EQ compatibility -->
        <version>8.1</version>
      </dependency>

      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>testcontainers</artifactId>
        <version>${testcontainers.version}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <!-- Junit4 mocks allow us to remove the unwanted junit4 transitive dependency introduced by testcontainers
      in a safe way. It is a minimal library of about 4 or 5 dummy interfaces. This will no longer be needed
      when testcontainers moves to version 2 -->
      <dependency>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-junit4-mock</artifactId>
        <version>2.5.0.Final</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>gcloud</artifactId>
        <version>${testcontainers.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>postgresql</artifactId>
        <version>${testcontainers.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>${testcontainers.version}</version>
        <scope>test</scope>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>
    <extensions>
      <extension>
        <groupId>com.google.cloud.artifactregistry</groupId>
        <artifactId>artifactregistry-maven-wagon</artifactId>
        <version>2.1.1</version>
      </extension>
    </extensions>

    <pluginManagement>
      <plugins>

        <!-- CODEHAUS - manage versions -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>2.7</version>
          <configuration>
            <generateBackupPoms>false</generateBackupPoms>
          </configuration>
        </plugin>

        <!-- MVN RELEASE - manage releases -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>3.0.0-M4</version>
          <configuration>
            <scmCommentPrefix>[ci skip]</scmCommentPrefix>
          </configuration>
        </plugin>

        <!-- MVN SOURCE - attach sources to jars -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.2.0</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- MVN COMPILER - javac -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
          <configuration>
            <release>${java.version}</release>
          </configuration>
        </plugin>

        <!-- MVN CHECKSTYLE - code style check -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>3.1.2</version>
          <configuration>
            <sourceDirectories>
              <dir>${project.build.sourceDirectory}</dir>
            </sourceDirectories>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>8.45.1</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>checkstyle</id>
              <phase>test</phase>
              <goals>
                <goal>check</goal>
              </goals>
              <configuration>
                <configLocation>https://raw.githubusercontent.com/ONSdigital/sdc-int-common/main/standards/ons-checkstyle-config.xml</configLocation>
                <encoding>UTF-8</encoding>
                <consoleOutput>true</consoleOutput>
                <violationSeverity>info</violationSeverity>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- COVEO - code formatter -->
        <plugin>
          <groupId>com.coveo</groupId>
          <artifactId>fmt-maven-plugin</artifactId>
          <version>2.13</version>
          <executions>
            <execution>
              <goals>
                <goal>format</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- JACOCO - code coverage -->
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco.version}</version>
          <configuration>
            <excludes>
              <exclude>**/*MethodAccess</exclude>
            </excludes>
          </configuration>

          <executions>
            <execution>
              <id>default-prepare-agent</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>

            <execution>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration></configuration>
            </execution>

            <execution>
              <id>pre-unit-test</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
                <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
                <propertyName>surefireArgLine</propertyName>
              </configuration>
            </execution>

            <execution>
              <id>post-unit-test</id>
              <phase>test</phase>
              <goals>
                <goal>report</goal>
              </goals>
              <configuration>
                <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
              </configuration>
            </execution>

            <execution>
              <id>pre-integration-test</id>
              <phase>pre-integration-test</phase>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
                <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
                <propertyName>failsafeArgLine</propertyName>
              </configuration>
            </execution>

            <execution>
              <id>post-integration-test</id>
              <phase>post-integration-test</phase>
              <goals>
                <goal>report</goal>
              </goals>
              <configuration>
                <dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
                <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
              </configuration>
            </execution>


            <execution>
              <id>report</id>
              <phase>verify</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- SUREFIRE - EXEC UNIT TESTS -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${surefire.version}</version>
          <configuration>
            <forkCount>1</forkCount>
            <reuseForks>true</reuseForks>
            <argLine>
                ${surefireArgLine} --add-opens java.base/java.lang=ALL-UNNAMED
              </argLine>
            <systemPropertyVariables>
              <java.util.logging.config.file>src/test/resources/junit-logging.properties</java.util.logging.config.file>
            </systemPropertyVariables>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>test</goal>
              </goals>
              <phase>test</phase>
            </execution>
          </executions>
        </plugin>


        <!-- FAILSAFE - integration tests -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>3.0.0-M3</version>
          <configuration>
            <argLine>${failsafeArgLine}</argLine>
            <skip>${skip.integration.tests}</skip>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
              <phase>integration-test</phase>
            </execution>
          </executions>
        </plugin>

        <!-- CODEHAUS BUILDNUMBER - build number -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>buildnumber-maven-plugin</artifactId>
          <version>1.4</version>
          <executions>
            <execution>
              <phase>validate</phase>
              <goals>
                <goal>create</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <doCheck>false</doCheck>
            <doUpdate>false</doUpdate>
            <timestampFormat>{0,date,yyyy-MM-dd'T'HH:mm:ss'Z'}</timestampFormat>
            <items>
              <item>timestamp</item>
            </items>
          </configuration>
        </plugin>

        <!-- SPRINGBOOT - spring boot -->
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${springboot.version}</version>
        </plugin>

        <!-- JAXB - jaxb -->
        <plugin>
          <groupId>org.jvnet.jaxb2.maven2</groupId>
          <artifactId>maven-jaxb2-plugin</artifactId>
          <version>0.14.0</version>
        </plugin>

      </plugins>
    </pluginManagement>
  </build>

  <repositories>
    <repository>
      <id>artifact-release-registry</id>
      <url>artifactregistry://europe-west2-maven.pkg.dev/ons-ci-int/int-maven-release</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>artifact-snapshot-registry</id>
      <url>artifactregistry://europe-west2-maven.pkg.dev/ons-ci-int/int-maven-snapshot</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>

  <distributionManagement>
    <snapshotRepository>
      <id>artifact-snapshot-registry</id>
      <url>artifactregistry://europe-west2-maven.pkg.dev/ons-ci-int/int-maven-snapshot</url>
    </snapshotRepository>
    <repository>
      <id>artifact-release-registry</id>
      <url>artifactregistry://europe-west2-maven.pkg.dev/ons-ci-int/int-maven-release</url>
    </repository>
  </distributionManagement>

</project>